# This workflow will build and deploy the docker image to test/production based on the branch.

name: Build and Deploy

# Run on changes to develop or main
on:
  push:
    branches:
      - develop
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Build and Deploy
    runs-on: [ self-hosted, linux ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Gradle Build
        run: ./gradlew clean build --parallel --refresh-dependencies
      #checkout our shared actions repo to use deploy and build actions
      - name: Checkout Shared Actions
        uses: actions/checkout@v2
        with:
          repository: FigureTechnologies/shared-actions
          ref: main
          token: ${{secrets.PAT}}
          path: shared-actions
      # must use this action before the other shared actions.
      - name: Set env
        uses: ./shared-actions/set-env-action
        with:
          docker_build_tag: ${{env.BRANCH_NAME}}
          run_offset: 500
      - name: Gradle Publish
        run: ./gradlew publish -PartifactVersion=$DOCKER_BUILD_TAG
      - name: Build and push Docker image
        uses: ./shared-actions/docker-image-action
        with:
          gcp_auth_json: ${{secrets.GCP_AUTH_JSON}}
          dockerfile: service/docker/Dockerfile
          context: service
      - name: Deploy via Docker
        uses: ./shared-actions/deploy-action
        with:
          gcp_auth_json: ${{secrets.GCP_AUTH_JSON}}
          deployinator_auth_json: ${{secrets.DEPLOYINATOR_AUTH_JSON}}
  slack:
    name: Slack
    runs-on: [ linux, self-hosted ]
    needs: [ deploy ] # Include all jobs that should be in message
    if: always()
    steps:
      - name: Checkout Shared Actions
        uses: actions/checkout@v2-beta
        with:
          repository: FigureTechnologies/shared-actions
          ref: main
          token: ${{secrets.PAT}}
          path: shared-actions
      - name: Notify via Slack
        uses: ./shared-actions/notify-slack-action
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOYMENTS_WEBHOOK }}
        with:
          needs: ${{ toJSON(needs) }}
          emoji: ":deathpledge:"
